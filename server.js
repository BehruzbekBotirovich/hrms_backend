import express from 'express';
import dotenv from 'dotenv';
import mongoose from 'mongoose';
import cors from 'cors';
import helmet from 'helmet';

import authRoutes from './routes/authRoutes.js';
import userRoutes from './routes/userRoutes.js';
import uploadRoutes from './routes/uploadRoutes.js';
import projectRoutes from './routes/projectRoutes.js';
import boardRoutes from './routes/boardRoutes.js';
import taskRoutes from './routes/taskRoutes.js';
import attendeeRoutes from './routes/attendanceRoutes.js';

dotenv.config();
const app = express();

app.use(cors());
app.use(helmet());
app.use(express.json());
app.use('/user', uploadRoutes);
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
app.use(cors({
    origin: '*',  // –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø —Å –ª—é–±–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
    allowedHeaders: ['Content-Type', 'Authorization'],
    credentials: true,  // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å cookies
}));

app.get('/api', (req, res) => {
    res.send('Hello world from backend PLANERA');
});

// Webhook –¥–ª—è Telegram
app.post('/your-webhook-endpoint', (req, res) => {
    const update = req.body;
    bot.processUpdate(update);  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
    res.sendStatus(200);  // –û—Ç–≤–µ—Ç Telegram –æ —Ç–æ–º, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ
});


app.use('/api/auth', authRoutes); // –ø—Ä–∏–º–µ—Ä –º–∞—Ä—à—Ä—É—Ç–∞
app.use('/api/users', userRoutes);
app.use('/api/projects', projectRoutes);
app.use('/api', boardRoutes);
app.use('/api', taskRoutes);
app.use('/api/attendance', attendeeRoutes);

const PORT = process.env.PORT || 5000;
mongoose
    .connect(process.env.MONGO_URI)
    .then(() => {
        console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
        app.listen(PORT, () => console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
    })
    .catch((err) => console.error('‚ùå –û—à–∏–±–∫–∞ MongoDB:', err));
