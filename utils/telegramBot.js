import TelegramBot from 'node-telegram-bot-api';
import fetch from 'node-fetch';
import User from '../models/User.js';
import { format } from 'date-fns';

const botToken = '7812173829:AAGsGjYvtjXNWGyi7JrXHFcJ9AN02OXFtSk';
const bot = new TelegramBot(botToken);  // –ë–µ–∑ { polling: true }

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ chatId (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
export const saveChatId = async (phone, chatId) => {
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º chatId –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const user = await User.findOneAndUpdate({ phone }, { chatId }, { upsert: true });
        console.log(`User ${phone} chatId saved: ${chatId}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ chatId:', error);
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
export const sendTelegramMessage = async (chatId, message) => {
    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
            })
        });

        if (!response.ok) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
        }
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error);
    }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏
export const notifyTaskCreated = async (task) => {
    const message = `
        üì© –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞:
        
        üîñ –ó–∞–¥–∞—á–∞: "${task.title}"
        üìã –û–ø–∏—Å–∞–Ω–∏–µ: ${task.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
        üîë –°—Ç–∞—Ç—É—Å: ${task.status}
        ‚è≥ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${task.priority || '–ù–µ —É–∫–∞–∑–∞–Ω'}
        üóì –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${task.startDate ? format(new Date(task.startDate), 'MMM dd, yyyy, HH:mm') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
        üóì –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${task.dueDate ? format(new Date(task.dueDate), 'MMM dd, yyyy, HH:mm') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
        
        –°–æ–∑–¥–∞—Ç–µ–ª—å: ${task.createdBy.fullName}
    `;

    // –ü–æ–ª—É—á–∞–µ–º chatId —Å–æ–∑–¥–∞—Ç–µ–ª—è –∑–∞–¥–∞—á–∏
    const creator = await User.findById(task.createdBy);
    if (creator && creator.chatId) {
        await sendTelegramMessage(creator.chatId, message);  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∑–∞–¥–∞—á–∏
    } else {
        console.log(`–°–æ–∑–¥–∞—Ç–µ–ª—å –∑–∞–¥–∞—á–∏ ${task.createdBy} –Ω–µ –∏–º–µ–µ—Ç chatId`);
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for (const assignedUser of task.assignedTo) {
        const user = await User.findById(assignedUser);
        if (user && user.chatId) {
            await sendTelegramMessage(user.chatId, message);  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        } else {
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${assignedUser} –Ω–µ –∏–º–µ–µ—Ç chatId`);
        }
    }
};
